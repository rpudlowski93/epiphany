kind: configuration/prometheus
title: "Prometheus"
name: default
specification:
  version: 2.10.0
  file_name: "prometheus-2.10.0.linux-amd64.tar.gz"
  config_directory: "/etc/prometheus"
  storage:
    data_directory: "/var/lib/prometheus"
  config_flags:                                                                   # Parameters that Prometheus service will be started with.
    - "--config.file=/etc/prometheus/prometheus.yml"                              # Directory should be the same as "config_directory"
    - "--storage.tsdb.path=/var/lib/prometheus"                                   # Directory should be the same as "storage.data_directory"
    - "--storage.tsdb.retention.time=180d"                                        # Data retention time for metrics
    - "--storage.tsdb.retention.size=20GB"                                        # Data retention size for metrics
    - "--web.console.libraries=/etc/prometheus/console_libraries"                 # Directory should be the same as "config_directory"
    - "--web.console.templates=/etc/prometheus/consoles"                          # Directory should be the same as "config_directory"
    - "--web.listen-address=0.0.0.0:9090"                                         # Address that Prometheus console will be available
    - "--web.enable-admin-api"                                                    # Enables administrative HTTP API

  metrics_path: "/metrics"
  scrape_interval : "15s"
  scrape_timeout: "10s"
  evaluation_interval: "10s"
  remote_write: []
  remote_read: []
  alerts: # Alert rules are enabled by default, to enable Alertmanager (notifications sender) go to config below
    rules: # Predefined rules, feel free to add more
      - name: "UpDown"
        expression: up == 0
        duration: 1m #1s, 1m, 1h, 1d, 1w, ...
        severity: critical
        message: "Node is down."
      - name: "DiskSpace"
        expression: ((node_filesystem_avail_bytes* 100) / node_filesystem_size_bytes) < 20 # 100 - 80
        duration: 1m #1s, 1m, 1h, 1d, 1w, ...
        severity: critical
        message: "Disk usage is above 80%"
      - name: "DiskSpacePrediction"
        expression: predict_linear(node_filesystem_free_bytes{job="node"}[1h], 48 * 3600) < 0
        duration: 1m #1s, 1m, 1h, 1d, 1w, ...
        severity: warning
        message: "Disk will run out of space in less than 48h"
      - name: "MemoryUsage"
        expression: (sum by (instance) (node_memory_MemTotal_bytes) - sum by (instance)(node_memory_MemFree_bytes + node_memory_Buffers_bytes + node_memory_Cached_bytes) ) / sum by (instance)(node_memory_MemTotal_bytes) * 100 > 80
        duration: 15m #1s, 1m, 1h, 1d, 1w, ...
        severity: warning
        message: "Server memory has been used in more than 80% during last 15 minutes."
      - name: "CpuLoad"
        expression: 100 - (avg by (instance) (irate(node_cpu_seconds_total{job="node",mode="idle"}[5m])) * 100) > 80
        duration: 15m #1s, 1m, 1h, 1d, 1w, ...
        severity: critical
        message: "CPU utilization has exceeded 80% over last 15 minutes."
      - name: "KafkaConsumerLag"
        expression: sum by(consumergroup) (kafka_consumergroup_lag) > 1000
        duration: 15m #1s, 1m, 1h, 1d, 1w, ...
        severity: critical
        message: "Kafka consumers are lagging more than 1000 messages over last 15 minutes."

    alertmanager:
      enable: False # To make Alertmanager working, you have to enable it and define receivers and routes
      file_name: "alertmanager-0.17.0.linux-amd64.tar.gz"
      version: 0.17.0
      config: # Configuration for Alertmanager, it will be passed to Alertmanager service.

        # Full list of configuration fields https://prometheus.io/docs/alerting/configuration/
        global:
          resolve_timeout: 5m
#          smtp_from: "alert@test.com"
#          smtp_smarthost: "smtp-url:smtp-port"
#          smtp_auth_username: "your-smtp-user@domain.com"
#          smtp_auth_password: "your-smtp-password"
#          smtp_require_tls: True
        route:
          group_by: ['alertname']
          group_wait: 10s
          group_interval: 10s
          repeat_interval: 1h
#          receiver: 'email' # Default receiver, change if another is set to default
          routes:
#            Example routes, names need to match 'name' field of receiver
#            - match_re:
#                severity: critical
#              receiver: opsgenie
#              continue: true
#            - match_re:
#                severity: critical
#              receiver: pagerduty
#              continue: true
#            - match_re:
#                severity: info|warning|critical
#              receiver: slack
#              continue: true
#            - match_re:
#                severity: warning|critical
#              receiver: email

        receivers: # example configuration for receivers # api_url: https://prometheus.io/docs/alerting/configuration/#receiver
#          - name: 'email'
#            email_configs:
#              - to: "test@domain.com"
    #      - name: 'slack'
    #        slack_configs:
    #          - api_url: "your-slack-integration-url"
    #      - name: 'pagerduty'
    #        pagerduty_configs:
    #          - service_key: "your-pagerduty-service-key"
    #      - name: 'opsgenie'
    #        opsgenie_config:
    #          api_key: <secret> | default = global.opsgenie_api_key
    #          api_url: <string> | default = global.opsgenie_api_url

