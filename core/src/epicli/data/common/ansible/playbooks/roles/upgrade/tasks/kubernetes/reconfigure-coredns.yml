---
- name: Change coredns to use {{ image_registry_address }}
  block:
    - name: upgrade-master | Get coredns image
      environment:
        KUBECONFIG: /home/{{ admin_user.name }}/.kube/config
      shell: |-
        kubectl get deployments.apps coredns -n kube-system -o=jsonpath='{$.spec.template.spec.containers[:1].image}'
      changed_when: false
      register: coredns_image_repository
      args:
        executable: /bin/bash
    - name: upgrade-master | Patch coredns to use {{ image_registry_address }}
      environment:
        KUBECONFIG: /home/{{ admin_user.name }}/.kube/config
      shell: |-
        set -o pipefail &&
        kubectl patch deployment coredns --patch '{"spec": {"template": { "spec": { "containers": [ { "image": "{{ image_registry_address }}/{{ coredns_image_repository.stdout }}", "name": "coredns" }]}}}}' -n kube-system
      args:
        executable: /bin/bash
      when:
        - not image_registry_address in coredns_image_repository.stdout

    - name: upgrade-master | Get coredns config map (Corefile)
      environment:
        KUBECONFIG: /home/{{ admin_user.name }}/.kube/config
      shell: |-
        kubectl get configmap coredns -n kube-system -o=jsonpath='{$.data.Corefile}'
      changed_when: false
      register: coredns_corefile
      args:
        executable: /bin/bash

    - name: upgrade-master | Patch Corefile to not use deprecated plugin (upstream)
      environment:
        KUBECONFIG: /home/{{ admin_user.name }}/.kube/config
      shell: |-
        kubectl -n kube-system get configmap coredns -o yaml | sed  's/upstream//g' | kubectl apply -f - 
      args:
        executable: /bin/bash
      when:
        - '"upstream" in coredns_corefile.stdout'

    - name: upgrade-master | Patch Corefile to not use deprecated plugin (replace proxy with forward plugin)
      environment:
        KUBECONFIG: /home/{{ admin_user.name }}/.kube/config
      shell: |-
        kubectl -n kube-system get configmap coredns -o yaml | sed  's/proxy/forward/g' | kubectl apply -f - 
      args:
        executable: /bin/bash
      when:
        - '"proxy" in coredns_corefile.stdout'